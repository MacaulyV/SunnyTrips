# Define o nome da aplica��o que ser� exibido nos logs e em outros contextos
spring.application.name=SunnyTrips

# ================================
# Configura��o da conex�o com o Oracle
# ================================
# URL de conex�o com o banco Oracle. Aqui a gente especifica o protocolo, host, porta e o identificador da inst�ncia
spring.datasource.url=jdbc:oracle:thin:@oracle.fiap.com.br:1521:orcl
# Nome do usu�rio para acessar o banco
spring.datasource.username=rm553350
# Senha para acessar o banco. (Cuidado para n�o expor em ambientes p�blicos!)
spring.datasource.password=191203
# Driver JDBC que possibilita a conex�o com o Oracle
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver

# Substituir conte�do anterior quando for fazer deploy da aplica��o no Render por esse.
# spring.datasource.url=${ORACLE_JDBC_URL}
# spring.datasource.username=${ORACLE_USERNAME}
# spring.datasource.password=${ORACLE_PASSWORD}

# ================================
# Configura��o do JPA e Hibernat
# ================================
# Configura o Hibernate para atualizar o esquema do banco automaticamente conforme as mudan�as nas entidades.
spring.jpa.hibernate.ddl-auto=update
# Especifica a plataforma de banco de dados para que o Hibernate gere as queries adequadas para o Oracle.
spring.jpa.database-platform=org.hibernate.dialect.OracleDialect

# (Opcional) Configura para exibir as consultas SQL no console. Muito �til para debug e para ver o que est� acontecendo
spring.jpa.show-sql=true

# Habilita a interface Swagger UI para facilitar a documenta��o da API e os testes de integra��o
springdoc.swagger-ui.enabled=true

# Define o prefixo e sufixo dos templates
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

# Define o modo template (HTML5 para projetos web)
spring.thymeleaf.mode=HTML

# N�o cachear templates em ambiente de desenvolvimento
spring.thymeleaf.cache=false

# Habilita o livereload para atualiza��es autom�ticas
spring.devtools.livereload.enabled=true

# ================================
# Configura��o do servidor
# ================================
# Define a porta em que o servidor Spring Boot ir� rodar (por padr�o � a 8080)
server.port=8080
