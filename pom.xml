<?xml version="1.0" encoding="UTF-8"?>
<!--
  Esse é o arquivo de configuração Maven (pom.xml) para o projeto SunnyTrips.
  Aqui definimos as dependências, plugins e outras configurações necessárias para construir a aplicação.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             https://maven.apache.org/xsd/maven-4.0.0.xsd">

    <!-- Versão do modelo do POM -->
    <modelVersion>4.0.0</modelVersion>

    <!-- Configuração do parent do Spring Boot, que já traz configurações padrão bem legais -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.4.4</version>
        <relativePath/>
    </parent>

    <!-- Definindo o grupo, artefato e versão do projeto -->
    <groupId>com.sunnytrips</groupId>
    <artifactId>SunnyTrips</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>SunnyTrips</name>
    <description>SunnyTrips</description>

    <!-- Define a versão do Java para compilar o projeto -->
    <properties>
        <java.version>21</java.version>
    </properties>

    <!-- Lista de dependências necessárias para o projeto -->
    <dependencies>
        <!-- Dependência para usar Spring Data JPA, que facilita a integração com o banco de dados -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <!-- Dependência para validação dos dados (como @NotBlank, @Email, etc) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <!-- Dependência para construção de APIs REST com Spring Boot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- Dependência para o Spring Boot DevTools, que ajuda no desenvolvimento com recarga automática -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>

        <!-- Driver JDBC para conexão com o Oracle. Importante para acessar o banco -->
        <dependency>
            <groupId>com.oracle.database.jdbc</groupId>
            <artifactId>ojdbc11</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- Lombok simplifica o código ao gerar getters, setters e outros métodos automaticamente -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- Dependência para testes com Spring Boot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Dependência do Springdoc OpenAPI para gerar a documentação da API automaticamente -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-api</artifactId>
            <version>2.1.0</version>
        </dependency>

        <!-- Dependência para a interface web do Swagger (Swagger UI) para visualizar a documentação da API -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>2.1.0</version>
        </dependency>

        <!-- Dependência do Spring Boot para integração com o Thymeleaf -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>

    </dependencies>

    <!-- Configuração de plugins que serão usados durante a build do projeto -->
    <build>
        <plugins>
            <!-- Plugin do Maven Compiler para processar as anotações do Lombok, gerando os métodos automaticamente -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
            <!-- Plugin Spring Boot para facilitar a execução e a empacotação da aplicação -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!-- Configuração dos repositórios Maven dos quais as dependências serão baixadas -->
    <repositories>
        <repository>
            <id>central</id>
            <name>Maven Central Repository</name>
            <url>https://repo1.maven.org/maven2/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

</project>
